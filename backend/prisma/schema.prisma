generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  WAITER
  ADMIN

  @@map("users_type")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  type       UserType @default(WAITER)
  created_at DateTime @default(now())

  @@map("users")
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  emoji String

  createdAt DateTime  @default(now())
  products  Product[]

  @@map("categories")
}

model Ingredient {
  id    String @id @default(uuid())
  name  String @unique
  emoji String

  createdAt DateTime  @default(now())
  products  Product[]

  @@map("ingredients")
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String
  price       Decimal @db.Decimal(10, 2)
  imageUrl    String  @map("image_url")

  categoryId String   @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id])

  ingredients Ingredient[]
  orderItems  OrderProducts[]

  @@map("products")
}

enum OrderStatus {
  WAITING
  IN_PRODUCTION
  DONE

  @@map("order_status")
}

model Day {
  id     String   @id @default(uuid())
  date   DateTime @default(now())
  active Boolean  @default(true)

  total_orders     Int?      @map("total_orders")
  completed_orders Int?      @map("completed_orders")
  total_revenue    Decimal?  @map("total_revenue") @db.Decimal(10, 2)
  closed_at        DateTime? @map("closed_at")

  created_at DateTime @default(now()) @map("created_at")

  orders Order[]

  @@map("days")
}

model Order {
  id        String          @id @default(uuid())
  table     Int
  status    OrderStatus     @default(WAITING)
  createdAt DateTime        @default(now()) @map("created_at")
  products  OrderProducts[]

  dayId String @map("day_id")
  day   Day    @relation(fields: [dayId], references: [id])

  @@map("orders")
}

model OrderProducts {
  id        String @id @default(uuid())
  orderId   String @map("order_id")
  productId String @map("product_id")
  quantity  Int

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_products")
}
